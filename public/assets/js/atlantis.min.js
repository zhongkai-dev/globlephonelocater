/**
 * Atlantis Admin Dashboard JS
 * Version: 1.0.1
 */

"use strict";

// Atlantis main initialization
var Atlantis = {
    init: function() {
        this.initComponents();
        this.initNavigation();
        this.initScrollBar();
        this.checkFlashMessages();
    },
    
    initComponents: function() {
        // Initialize tooltips
        $('[data-toggle="tooltip"]').tooltip();
        
        // Initialize popovers
        $('[data-toggle="popover"]').popover({
            html: true,
            container: 'body'
        });
        
        // Initialize DataTables with optimal settings
        this.initDatatables();
    },
    
    initDatatables: function() {
        // Only initialize if not already initialized
        if ($('.datatable').length > 0 && !$('.datatable').hasClass('dataTable')) {
            $('.datatable').DataTable({
                responsive: true,
                pageLength: 10,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                language: {
                    search: "_INPUT_",
                    searchPlaceholder: "Search records",
                    lengthMenu: "Show _MENU_ entries",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    infoEmpty: "Showing 0 to 0 of 0 entries",
                    infoFiltered: "(filtered from _MAX_ total entries)"
                }
            });
        }
        
        // Apply to standard tables if they have the 'table' class but not dataTable class
        if ($('.table').length > 0) {
            $('.table').not('.dataTable').not('.no-datatable').each(function() {
                $(this).DataTable({
                    responsive: true,
                    pageLength: 10,
                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    language: {
                        search: "_INPUT_",
                        searchPlaceholder: "Search records"
                    }
                });
            });
        }
    },
    
    initNavigation: function() {
        // Toggle sidebar on mobile
        $('.toggle-sidebar').on('click', function(e) {
            e.preventDefault();
            $('.sidebar').toggleClass('show');
            
            // Add backdrop for mobile
            if ($('.sidebar').hasClass('show')) {
                $('<div class="sidebar-backdrop"></div>').appendTo('body');
                $('.sidebar-backdrop').on('click', function() {
                    $('.sidebar').removeClass('show');
                    $(this).remove();
                });
            } else {
                $('.sidebar-backdrop').remove();
            }
        });
        
        // Check sidebar state on resize
        $(window).resize(function() {
            if ($(window).width() >= 992) {
                $('.sidebar').removeClass('show');
                $('.sidebar-backdrop').remove();
                $('.sidebar').css({
                    'display': 'block',
                    'left': '0'
                });
            }
        });
        
        // Highlight current active menu item
        var currentPath = window.location.pathname;
        
        $('.sidebar .nav .nav-item').each(function() {
            var link = $(this).find('.nav-link');
            var href = link.attr('href');
            
            // Skip if already active
            if (!$(this).hasClass('active')) {
                if (href && currentPath.startsWith(href) && href !== '/') {
                    $(this).addClass('active');
                }
            }
        });
    },
    
    initScrollBar: function() {
        // Auto scroll to active sidebar item
        if ($('.sidebar .nav .nav-item.active').length) {
            var activeItem = $('.sidebar .nav .nav-item.active');
            var sidebarContainer = $('.sidebar');
            sidebarContainer.animate({
                scrollTop: activeItem.offset().top - sidebarContainer.offset().top + sidebarContainer.scrollTop() - 100
            }, 200);
        }
    },
    
    checkFlashMessages: function() {
        // Handle auto-fade for alert messages
        setTimeout(function() {
            $('.alert-dismissible').fadeOut('slow', function() {
                $(this).remove();
            });
        }, 5000);
    },
    
    showNotification: function(message, type) {
        type = type || 'info';
        
        let icon = 'fas fa-info-circle';
        
        if (type === 'success') icon = 'fas fa-check-circle';
        if (type === 'warning') icon = 'fas fa-exclamation-circle';
        if (type === 'danger') icon = 'fas fa-times-circle';
        
        const html = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                <i class="${icon} mr-2"></i> ${message}
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        `;
        
        // If notifications container exists, prepend to it
        if ($('#notifications').length) {
            $('#notifications').prepend(html);
        } else {
            // Create container if it doesn't exist
            if (!$('.notifications-container').length) {
                $('body').prepend('<div class="notifications-container" style="position:fixed; top:20px; right:20px; z-index:9999; width:300px;"></div>');
            }
            $('.notifications-container').prepend(html);
        }
        
        // Auto-dismiss after 5 seconds
        setTimeout(function() {
            $('.alert-dismissible').fadeOut('slow', function() {
                $(this).remove();
            });
        }, 5000);
    },
    
    // Helper functions for form validation
    validateForm: function(formSelector) {
        var isValid = true;
        var form = $(formSelector);
        
        // Reset validation
        form.find('.is-invalid').removeClass('is-invalid');
        form.find('.invalid-feedback').remove();
        
        // Check required fields
        form.find('[required]').each(function() {
            if (!$(this).val()) {
                $(this).addClass('is-invalid');
                $('<div class="invalid-feedback">This field is required</div>').insertAfter($(this));
                isValid = false;
            }
        });
        
        // Check email fields
        form.find('input[type="email"]').each(function() {
            var email = $(this).val();
            if (email && !this.checkValidity()) {
                $(this).addClass('is-invalid');
                $('<div class="invalid-feedback">Please enter a valid email address</div>').insertAfter($(this));
                isValid = false;
            }
        });
        
        // Check number fields
        form.find('input[type="number"]').each(function() {
            var value = $(this).val();
            if (value && !this.checkValidity()) {
                $(this).addClass('is-invalid');
                $('<div class="invalid-feedback">Please enter a valid number</div>').insertAfter($(this));
                isValid = false;
            }
        });
        
        return isValid;
    },
    
    // Function to submit forms via AJAX
    submitFormAjax: function(formSelector, successCallback, errorCallback) {
        var form = $(formSelector);
        
        if (!this.validateForm(formSelector)) {
            return false;
        }
        
        $.ajax({
            url: form.attr('action'),
            type: form.attr('method') || 'POST',
            data: form.serialize(),
            success: function(response) {
                if (successCallback && typeof successCallback === 'function') {
                    successCallback(response);
                } else {
                    Atlantis.showNotification('Operation completed successfully', 'success');
                }
            },
            error: function(xhr, status, error) {
                if (errorCallback && typeof errorCallback === 'function') {
                    errorCallback(xhr, status, error);
                } else {
                    Atlantis.showNotification('Error: ' + (xhr.responseJSON?.message || error), 'danger');
                }
            }
        });
        
        return false;
    }
};

// Initialize when document is ready
$(document).ready(function() {
    Atlantis.init();
}); 